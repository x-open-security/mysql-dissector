use std::io::Cursor;
use bytes::Buf;
pub struct Tabular {


}

impl Tabular {
    pub fn new(reader: Cursor<&[u8]>) -> Tabular {
        Tabular {}
    }

}


#[cfg(test)]
mod test {
    use super::*;
    use std::io::Cursor;
    use bytes::Buf;

    #[test]
    pub fn test_tabular() {
        let packet_bytes:&[u8]= &[
            0x01, 0x00, 0x00, 0x01, 0x01, 0x35, 0x00, 0x00,
            0x02, 0x03, 0x64, 0x65, 0x66, 0x00, 0x00, 0x00,
            0x1f, 0x40, 0x40, 0x73, 0x65, 0x73, 0x73, 0x69,
            0x6f, 0x6e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
            0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
            0x73, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
            0x00, 0x0c, 0x2d, 0x00, 0x3c, 0x00, 0x00, 0x00,
            0xfd, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x10, 0x00,
            0x00, 0x03, 0x0f, 0x52, 0x45, 0x50, 0x45, 0x41,
            0x54, 0x41, 0x42, 0x4c, 0x45, 0x2d, 0x52, 0x45,
            0x41, 0x44, 0x07, 0x00, 0x00, 0x04, 0xfe, 0x00,
            0x00, 0x02, 0x00, 0x00, 0x00
        ];

        let mut reader = Cursor::new(packet_bytes);
        let tabular = Tabular::new(reader);

    }
}